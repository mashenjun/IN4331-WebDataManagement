doc("/db/movies/movies.xml")//title
doc("/db/movies/movies.xml")//title/text()
doc("/db/movies/movies.xml")//movie[year>2000]/title/text()
doc("/db/movies/movies.xml")//movie[title='Spider-Man']/summary/text()
doc("/db/movies/movies.xml")//movie[title='Heat']/director/(last_name | first_name )/text()

doc("/db/movies/movies.xml")//movie/title[../actor/first_name ='Kirsten'and ../actor/last_name='Dunst']/text()
optional:doc("/db/movies/movies.xml")//movie[actor/first_name ='Kirsten'and actor/last_name='Dunst']/title

doc("/db/movies/movies.xml")//movie/title[../summary]/text()
optional:doc("/db/movies/movies.xml")//movie[summary]/title/text()

doc("/db/movies/movies.xml")//movie/title[not(../summary)]/text()
optional:doc("/db/movies/movies.xml")//movie[not(summary)]/title/text()

doc("/db/movies/movies.xml")//movie[year< (fn:year-from-date(fn:current-dateTime())-10)]/title/text()
optional:doc("/db/movies/movies.xml")//movie[title='Unforgiven']/actor[first_name='Clint'and last_name='Eastwood']/role/text()

doc("/db/movies/movies.xml")//movie[../count(*)]/title/text()

doc("/db/movies/movies.xml")//movie[title='Marie Antoinette']/preceding-sibling::movie[1]/title/text()
doc("/db/movies/movies.xml")//movie[contains(title,'V')]/title/text()
doc("/db/movies/movies.xml")//movie[count(actor)=3]/title/text()